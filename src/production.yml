version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_django_media: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: src_production_django
    volumes:
      - production_django_media:/app/src/media
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start
    restart: always
    
  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: src_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - /home/.inpromar/postgres/backups:/backups
    env_file:
      - ./.envs/.production/.postgres
    restart: always

  redis:
    image: redis:6
    restart: always

  celeryworker:
    <<: *django
    image: src_production_celeryworker
    command: /start-celeryworker
    restart: always

  celerybeat:
    <<: *django
    image: src_production_celerybeat
    command: /start-celerybeat
    restart: always

  flower:
    <<: *django
    image: src_production_flower
    command: /start-flower
    restart: always

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: src_local_nginx
    depends_on:
      - django
    volumes:
      - production_django_media:/usr/share/nginx/media:ro
    ports:
      - "0.0.0.0:80:80"
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: inpromar@pgadmin4.com
      PGADMIN_DEFAULT_PASSWORD: inpromar_local
    ports: 
      - "9001:80"
    depends_on: 
      - postgres